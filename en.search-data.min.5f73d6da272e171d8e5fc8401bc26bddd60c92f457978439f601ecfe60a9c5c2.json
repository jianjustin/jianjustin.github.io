[{"id":0,"href":"/docs/golang/gorm/hidden/","title":"Hidden","section":"Gorm","content":" This page is hidden in menu # Quondam non pater est dignior ille Eurotas # Latent te facies # Lorem markdownum arma ignoscas vocavit quoque ille texit mandata mentis ultimus, frementes, qui in vel. Hippotades Peleus pennas conscia cuiquam Caeneus quas.\nPater demittere evincitque reddunt Maxime adhuc pressit huc Danaas quid freta Soror ego Luctus linguam saxa ultroque prior Tatiumque inquit Saepe liquitur subita superata dederat Anius sudor Cum honorum Latona # O fallor in sustinui iussorum equidem. Nymphae operi oris alii fronde parens dumque, in auro ait mox ingenti proxima iamdudum maius?\nreality(burnDocking(apache_nanometer), pad.property_data_programming.sectorBrowserPpga(dataMask, 37, recycleRup)); intellectualVaporwareUser += -5 * 4; traceroute_key_upnp /= lag_optical(android.smb(thyristorTftp)); surge_host_golden = mca_compact_device(dual_dpi_opengl, 33, commerce_add_ppc); if (lun_ipv) { verticalExtranet(1, thumbnail_ttl, 3); bar_graphics_jpeg(chipset - sector_xmp_beta); } Fronde cetera dextrae sequens pennis voce muneris # Acta cretus diem restet utque; move integer, oscula non inspirat, noctisque scelus! Nantemque in suas vobis quamvis, et labori!\nvar runtimeDiskCompiler = home - array_ad_software; if (internic \u0026gt; disk) { emoticonLockCron += 37 + bps - 4; wan_ansi_honeypot.cardGigaflops = artificialStorageCgi; simplex -= downloadAccess; } var volumeHardeningAndroid = pixel + tftp + onProcessorUnmount; sector(memory(firewire + interlaced, wired)); "},{"id":1,"href":"/docs/golang/gorm/%E8%BF%9E%E6%8E%A5%E6%95%B0%E6%8D%AE%E5%BA%93/","title":"连接数据库","section":"Gorm","content":" 连接数据库 # 添加依赖 go get -u \u0026#34;gorm.io/gorm\u0026#34; go get -u \u0026#34;gorm.io/driver/mysql\u0026#34; 编写数据库连接 import ( \u0026#34;gorm.io/driver/mysql\u0026#34; \u0026#34;gorm.io/gorm\u0026#34; ) func main() { // 参考 https://github.com/go-sql-driver/mysql#dsn-data-source-name 获取详情 dsn := \u0026#34;user:pass@tcp(127.0.0.1:3306)/dbname?charset=utf8mb4\u0026amp;parseTime=True\u0026amp;loc=Local\u0026#34; db, err := gorm.Open(mysql.Open(dsn), \u0026amp;gorm.Config{}) } "},{"id":2,"href":"/docs/linux/arch-linux%E9%85%8D%E7%BD%AEclash/","title":"Arch Linux配置 Clash","section":"Linux指南","content":" Arch Linux配置Clash # 安装Clash # 安装Clash：sudo pacman -S clash 生成Clash配置文件（配置文件目录是～/.config/clash）：clash 设置终端代理 # 安装proxychains-ng：sudo pacman -S proxychains-ng 修改配置文件：sudo vim /etc/proxychains.conf [ProxyList] # add proxy here ... # meanwile # defaults set to \u0026#34;tor\u0026#34; socks5 127.0.0.1 7891 命令走代理：proxychains \u0026lt;command\u0026gt;\n配置环境：sudo vim /etc/environment\nhttp_proxy=127.0.0.1:7890 https_proxy=127.0.0.1:7890 socks_proxy=127.0.0.1:7891 自启动Clash # 添加配置文件 # 创建文件夹用以存储 Clash 相关文件 sudo mkdir -p /etc/clash # 复制相关文件 sudo cp ~/.config/clash/config.yaml /etc/clash/ sudo cp ~/.config/clash/Country.mmdb /etc/clash/ 添加Clash服务：sudo vim /etc/systemd/system/clash.service [Unit] Description=Clash daemon, A rule-based proxy in Go. After=network.target [Service] Type=simple Restart=always ExecStart=/usr/bin/clash -d /etc/clash # /usr/bin/clash 为绝对路径，请根据你实际情况修改 [Install] WantedBy=multi-user.target 添加clash到守护进程：sudo systemctl enable clash 启动Clash：sudo systemctl start clash "},{"id":3,"href":"/docs/linux/mac%E5%88%B6%E4%BD%9C%E5%90%AF%E5%8A%A8%E7%9B%98/","title":"Mac制作启动盘","section":"Linux指南","content":" Mac制作启动盘 # 查看U盘设备ID：diskutil list 取消U盘挂载：disk unmountDisk /dev/disk2 写入镜像：sudo dd if=/Users/{username}/Downloads/CentOS.iso of=/dev/disk2 bs=1m "},{"id":4,"href":"/docs/linux/%E5%AE%89%E8%A3%85arch-linux/","title":"安装 Arch Linux","section":"Linux指南","content":" 安装Arch Linux # 最小系统安装 # 检查引导方式是否是EFI：ls /sys/firmware/efi/efivars 创建引导分区（EFI方式需要，BIOS方式可跳过） 检查当前磁盘情况： fdisk -l 创建分区：fdisk /dev/sda 输入g创建新gpt分区表，输入n创建新分区，输入+512M来创建512M引导分区 格式化分区：mkfs.fat /dev/sda1 输入w使分区生效 创建根分区 创建分区：fdisk /dev/sda 输入o创建MBR分区表，输入n创建新分区 格式化分区：mkfs.ext4 /dev/sda2 输入w使分区生效 挂载分区 挂载根分区：mount /dev/sda1 /mnt 挂载引导分区：mkdir /mnt/boot \u0026amp;\u0026amp; mount /dev/sda2 /mnt/boot 修改镜像源：vim /etc/pacman.d/mirrorlist 安装基本包：pacstrap /mnt base base-devel linux linux-firmware dhcpcd 配置Fstab：genfstab -L /mnt \u0026gt;\u0026gt; /mnt/etc/fstab \u0026amp;\u0026amp; cat /mnt/etc/fstab 进入最小系统：arch-chroot /mnt 系统配置 # 安装必要依赖：pacman -S vim dialog wpa_supplicant ntfs-3g networkmanager netctl 设置时区：ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime \u0026amp;\u0026amp; hwclock —-systohc 设置语言包： vim /etc/locale.gen \u0026amp;\u0026amp; locale-gen配置zh_CN.UTF-8 UTF-8,zh_HK.UTF-8 UTF-8,zh_TW.UTF-8 UTF-8,en_US.UTF-8 UTF-8 配置字符集：locale - vim /etc/locale.conf在文件第一行配置LANG=en_US.UTF-8 配置主机名 ：vim /etc/hostname 配置hosts ：vim /etc/hosts 127.0.0.1 localhost ::1 localhost 127.0.1.1 myhostname.localdomain myhostname 配置root密码： passwd 安装intel固件：pacman -S intel-ucode 安装bootloader 安装必要配置： pacman -S os-prober ntfs-3g grub 部署grub： grub-install —-target=i386-pc /dev/sda 生成配置文件： grub-mkconfig -o /boot/grub/grub.cfg 卸载最小系统并重启 exit umount /mnt reboot 安装图形化 # 安装显卡驱动： sudo pacman -S xf86-video-intel 安装xorg： sudo pacman -S xorg 安装KDE桌面环境： sudo pacman -S plasma kde-applications 安装桌面管理器sddm： sudo pacman -S sddm 设置开机启动： sudo systemctl enable sddm 参考\n"}]